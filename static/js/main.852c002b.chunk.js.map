{"version":3,"sources":["componets/card/card.component.jsx","componets/card-list/card-list.component.jsx","componets/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","name","phone","website","CardList","list","map","row","id","SearchBoxComponent","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","response","catch","err","console","error","this","filterList","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEaA,G,MAAO,SAACC,GACjB,OAEQ,qBAAKC,UAAU,WAAf,SACR,qBAAKA,UAAU,QAAf,SACA,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BD,EAAME,OAClC,oBAAID,UAAU,gCAAd,SAA+CD,EAAMG,QACrD,mBAAGF,UAAU,YAAb,SAA0BD,EAAMI,mBCNzBC,G,MAAY,SAACL,GAE1B,OACIA,EAAMM,KAAKC,KAAI,SAAAC,GACb,OAAQ,cAAC,EAAD,aAAMP,UAAU,OAAuBO,GAAZA,EAAIC,SCNhCC,EAAqB,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAAiC,uBAAOC,KAAK,SAASF,YAAaA,EAAaG,SAAUF,KC2C7GG,E,kDAvCb,aAAc,IAAD,8BACX,gBAkBDD,SAAW,SAACE,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAlBrC,EAAKC,MAAQ,CACXf,KAAM,GACNY,YAAa,IAJJ,E,gEAUQ,IAAD,OACjBI,MAAM,8CACJC,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UAAQF,MAAK,SAAAG,GAC3B,EAAKT,SAAS,CAACX,KAAMoB,OACpBC,OAAM,SAAAC,GACPC,QAAQC,MAAMF,Q,+BAUX,IAAD,EAC2BG,KAAKV,MAA7Bf,EADH,EACGA,KAAOY,EADV,EACUA,YACZc,EAAa1B,EAAK2B,QAAO,SAAAzB,GAAG,OAAGA,EAAIN,KAAKgC,cAAcC,SAASjB,EAAYgB,kBAC/E,OACE,sBAAKjC,UAAU,MAAf,UAEM,cAAC,EAAD,CAAoBU,YAAY,WAAWC,aAAcmB,KAAKjB,WAC9D,cAAC,EAAD,CAAUb,UAAU,YAAaK,KAAM0B,W,GAjCjCI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.852c002b.chunk.js","sourcesContent":["\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport const Card = (props)=> {\r\n    return (\r\n  \r\n            <div className=\"col-sm-6\">\r\n    <div className=\"card \" >\r\n    <div className=\"card-body\">\r\n      <h5 className=\"card-title\">{props.name}</h5>\r\n      <h6 className=\"card-subtitle mb-2 text-muted\">{props.phone}</h6>\r\n      <p className=\"card-text\">{props.website}</p>\r\n\r\n    </div>\r\n  </div>\r\n  </div>\r\n  );\r\n}","\r\n\r\nimport {Card} from '../card/card.component'\r\nimport './card-list.style.css'\r\nexport const CardList  = (props) => {\r\n\r\nreturn (\r\n    props.list.map(row=>{\r\n      return  <Card className=\"row\" key={row.id} {...row}/>\r\n    })\r\n   \r\n);\r\n}\r\n\r\n","\r\n\r\nexport const SearchBoxComponent = ({placeholder, handleChange}) => <input type=\"search\" placeholder={placeholder} onChange={handleChange} />\r\n","\nimport './App.css';\nimport {Component} from 'react';\nimport {CardList} from './componets/card-list/card-list.component';\nimport  {SearchBoxComponent} from './componets/search-box/search-box.components'\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      list: [],\n      searchField: ''\n    }\n\n    \n  }\n\n   componentDidMount(){\n     fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res=> res.json()).then(response=>{\n        this.setState({list: response});\n      }).catch(err=> {\n        console.error(err)\n      })\n   }\n\n   onChange = (e) => {\n    this.setState({searchField: e.target.value});\n   }\n\n\n\n  render(){\n    const  { list , searchField }  = this.state;\n    let filterList = list.filter(row=> row.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        \n            <SearchBoxComponent placeholder=\"Search..\" handleChange={this.onChange} />\n            <CardList className=\"container\"  list={filterList} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}